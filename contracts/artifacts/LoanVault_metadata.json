{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "marketplaceAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_contractOwner",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_feePTRCent",
						"type": "uint32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "lender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amnt",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "AcceptedLoan",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "retractor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "CeaseLoan",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "lender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "LoanDefaulted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "LoanPaid",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "proposer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "tokenURI",
						"type": "string"
					}
				],
				"name": "PostedLoan",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "_fee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint96",
						"name": "_loanId",
						"type": "uint96"
					}
				],
				"name": "acceptLoan",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "accessActive",
				"outputs": [
					{
						"components": [
							{
								"internalType": "contract IERC721[]",
								"name": "nfts",
								"type": "address[]"
							},
							{
								"internalType": "uint224[]",
								"name": "nftIds",
								"type": "uint224[]"
							},
							{
								"internalType": "bool",
								"name": "paidOff",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "loanActive",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "uint96",
								"name": "requestedAmount",
								"type": "uint96"
							},
							{
								"internalType": "address",
								"name": "lender",
								"type": "address"
							},
							{
								"internalType": "uint96",
								"name": "toPay",
								"type": "uint96"
							},
							{
								"internalType": "uint64",
								"name": "timeStart",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "timeEnd",
								"type": "uint64"
							},
							{
								"internalType": "uint96",
								"name": "id",
								"type": "uint96"
							},
							{
								"internalType": "string",
								"name": "tokenURI",
								"type": "string"
							}
						],
						"internalType": "struct LoanVault.Loan",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "accessPending",
				"outputs": [
					{
						"components": [
							{
								"internalType": "contract IERC721[]",
								"name": "nfts",
								"type": "address[]"
							},
							{
								"internalType": "uint224[]",
								"name": "nftIds",
								"type": "uint224[]"
							},
							{
								"internalType": "bool",
								"name": "paidOff",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "loanActive",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "uint96",
								"name": "requestedAmount",
								"type": "uint96"
							},
							{
								"internalType": "address",
								"name": "lender",
								"type": "address"
							},
							{
								"internalType": "uint96",
								"name": "toPay",
								"type": "uint96"
							},
							{
								"internalType": "uint64",
								"name": "timeStart",
								"type": "uint64"
							},
							{
								"internalType": "uint64",
								"name": "timeEnd",
								"type": "uint64"
							},
							{
								"internalType": "uint96",
								"name": "id",
								"type": "uint96"
							},
							{
								"internalType": "string",
								"name": "tokenURI",
								"type": "string"
							}
						],
						"internalType": "struct LoanVault.Loan",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "activeLoans",
				"outputs": [
					{
						"internalType": "bool",
						"name": "paidOff",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "loanActive",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "requestedAmount",
						"type": "uint96"
					},
					{
						"internalType": "address",
						"name": "lender",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "toPay",
						"type": "uint96"
					},
					{
						"internalType": "uint64",
						"name": "timeStart",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "timeEnd",
						"type": "uint64"
					},
					{
						"internalType": "uint96",
						"name": "id",
						"type": "uint96"
					},
					{
						"internalType": "string",
						"name": "tokenURI",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feePTRCent",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint96",
						"name": "_loanId",
						"type": "uint96"
					}
				],
				"name": "getLoanDetails",
				"outputs": [
					{
						"internalType": "enum LoanVault.LoanStatus",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "lender",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "requestedAmount",
						"type": "uint96"
					},
					{
						"internalType": "uint96",
						"name": "toPay",
						"type": "uint96"
					},
					{
						"internalType": "uint64",
						"name": "startTime",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "endTime",
						"type": "uint64"
					},
					{
						"internalType": "string",
						"name": "tokenURI",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint96",
						"name": "_loanId",
						"type": "uint96"
					}
				],
				"name": "getLoanStatus",
				"outputs": [
					{
						"internalType": "enum LoanVault.LoanStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint96",
						"name": "_loanId",
						"type": "uint96"
					}
				],
				"name": "getLoanTokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMyActiveLoanIdsAsBorrower",
				"outputs": [
					{
						"internalType": "uint96[]",
						"name": "",
						"type": "uint96[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMyActiveLoanIdsAsLender",
				"outputs": [
					{
						"internalType": "uint96[]",
						"name": "",
						"type": "uint96[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getNFTPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalActiveLoans",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalPendingLoans",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContract",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "isCollateral",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC721",
						"name": "nft",
						"type": "address"
					},
					{
						"internalType": "uint224",
						"name": "nftId",
						"type": "uint224"
					},
					{
						"internalType": "address",
						"name": "nftOwner",
						"type": "address"
					}
				],
				"name": "isNFTApproved",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint96",
						"name": "_id",
						"type": "uint96"
					}
				],
				"name": "liquidate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "listActiveLoanIds",
				"outputs": [
					{
						"internalType": "uint96[]",
						"name": "",
						"type": "uint96[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "listPendingLoanIds",
				"outputs": [
					{
						"internalType": "uint96[]",
						"name": "",
						"type": "uint96[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "loanId",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "nftCollateralStatus",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint96",
						"name": "_id",
						"type": "uint96"
					}
				],
				"name": "payInFull",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "pendingLoans",
				"outputs": [
					{
						"internalType": "bool",
						"name": "paidOff",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "loanActive",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "requestedAmount",
						"type": "uint96"
					},
					{
						"internalType": "address",
						"name": "lender",
						"type": "address"
					},
					{
						"internalType": "uint96",
						"name": "toPay",
						"type": "uint96"
					},
					{
						"internalType": "uint64",
						"name": "timeStart",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "timeEnd",
						"type": "uint64"
					},
					{
						"internalType": "uint96",
						"name": "id",
						"type": "uint96"
					},
					{
						"internalType": "string",
						"name": "tokenURI",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC721[]",
						"name": "_nfts",
						"type": "address[]"
					},
					{
						"internalType": "uint224[]",
						"name": "_nftIds",
						"type": "uint224[]"
					},
					{
						"internalType": "uint96",
						"name": "_reqAmnt",
						"type": "uint96"
					},
					{
						"internalType": "uint96",
						"name": "_toPay",
						"type": "uint96"
					},
					{
						"internalType": "uint64",
						"name": "_duration",
						"type": "uint64"
					},
					{
						"internalType": "string",
						"name": "_tokenURI",
						"type": "string"
					}
				],
				"name": "propose",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint96",
						"name": "_id",
						"type": "uint96"
					}
				],
				"name": "retract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/LoanVault.sol": "LoanVault"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/LoanVault.sol": {
			"keccak256": "0x9b4d050a5de1930eaa9168d42f701346504109d47d0e67e694faf25b820f41b7",
			"license": "MIT",
			"urls": [
				"bzz-raw://5395cdae697f3e72ab39bfea8b2dcdf27bdee043d95bedc0f0e713d558dd5230",
				"dweb:/ipfs/QmTwGxC4sC2nGYKtEJmQJ9PdZvd8UGyerAzU1L1faDiKS2"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC721/ERC721.sol": {
			"keccak256": "0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f",
			"license": "MIT",
			"urls": [
				"bzz-raw://379879e94763b61c652f914da987a603fb1fec35645a1d6b8022413cf1c3a467",
				"dweb:/ipfs/QmVkFoHVN6XWztbJDHrWfMCRPV4QsbFGj6QPZYeMjQRfhr"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428",
			"license": "MIT",
			"urls": [
				"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7",
				"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4",
			"license": "MIT",
			"urls": [
				"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456",
				"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
			"keccak256": "0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78",
			"license": "MIT",
			"urls": [
				"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7",
				"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
			"keccak256": "0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16",
			"license": "MIT",
			"urls": [
				"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62",
				"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Address.sol": {
			"keccak256": "0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e",
				"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol": {
			"keccak256": "0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395",
				"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Strings.sol": {
			"keccak256": "0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0",
			"license": "MIT",
			"urls": [
				"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f",
				"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b",
			"license": "MIT",
			"urls": [
				"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549",
				"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4",
			"license": "MIT",
			"urls": [
				"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6",
				"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx"
			]
		}
	},
	"version": 1
}